// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  TypedMap,
  Entity,
  Value,
  ValueKind,
  store,
  Address,
  Bytes,
  BigInt,
  BigDecimal
} from "@graphprotocol/graph-ts";

export class Supporter extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id !== null, "Cannot save Supporter entity without an ID");
    assert(
      id.kind == ValueKind.STRING,
      "Cannot save Supporter entity with non-string ID. " +
        'Considering using .toHex() to convert the "id" to a string.'
    );
    store.set("Supporter", id.toString(), this);
  }

  static load(id: string): Supporter | null {
    return store.get("Supporter", id) as Supporter | null;
  }

  get id(): string {
    let value = this.get("id");
    return value.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }
}

export class Support extends Entity {
  constructor(id: string) {
    super();
    this.set("id", Value.fromString(id));
  }

  save(): void {
    let id = this.get("id");
    assert(id !== null, "Cannot save Support entity without an ID");
    assert(
      id.kind == ValueKind.STRING,
      "Cannot save Support entity with non-string ID. " +
        'Considering using .toHex() to convert the "id" to a string.'
    );
    store.set("Support", id.toString(), this);
  }

  static load(id: string): Support | null {
    return store.get("Support", id) as Support | null;
  }

  get id(): string {
    let value = this.get("id");
    return value.toString();
  }

  set id(value: string) {
    this.set("id", Value.fromString(value));
  }

  get supporter(): string {
    let value = this.get("supporter");
    return value.toString();
  }

  set supporter(value: string) {
    this.set("supporter", Value.fromString(value));
  }

  get aliasName(): string {
    let value = this.get("aliasName");
    return value.toString();
  }

  set aliasName(value: string) {
    this.set("aliasName", Value.fromString(value));
  }

  get comment(): string {
    let value = this.get("comment");
    return value.toString();
  }

  set comment(value: string) {
    this.set("comment", Value.fromString(value));
  }
}
